#!/bin/bash
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    echo "Waiting for Instruqt to finish booting the VM"
    sleep 1
done

# This has to be run after installation. 
# source /etc/profile.d/bash_completion.sh

subscription-manager config --rhsm.manage_repos=1
subscription-manager register --activationkey=${ACTIVATION_KEY} --org=12451665 --force

echo "Adding wheel" > /root/post-run.log
usermod -aG wheel rhel

echo "setting password" >> /root/post-run.log
echo redhat | passwd --stdin rhel

echo "DONE" >> /root/post-run.log

echo "${SSHKEY}" > r4ekey

chmod 600 r4ekey

mkdir /images
tee -a /images/dl_edge_iso.sh << EOF
#!/bin/bash

:<<'__COMMENT__'

To use:
export PROXY_USER=PROXYUSERNAMEHERE
export PROXY_PASS=PROXYPASSWORDHERE
export PROXY_URL=PROXYSERVERURLHERE

dl_edge_iso.sh <iso_url>

__COMMENT__

URL=\$1
# grab the redirect url from the API
#INIT_REDIRECT_URL=\$(curl -s --basic --proxy \${PROXY_URL} -u "\${PROXY_USER}:\${PROXY_PASS}" --proxy-user "\${PROXY_USER}:\${PROXY_PASS}" "\$URL")
#INIT_REDIRECT_URL=\$(curl -s --basic "\$URL")
INIT_REDIRECT_URL=\$(curl -s --basic -u "\${EDGEMGMT_USER}:\${EDGEMGMT_PASS}" "\$URL")
# clean up the html encoding
REDIRECT_URL=\$(echo \$INIT_REDIRECT_URL | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%&:;-]*" | sed 's/amp;//g')
# grab the basic URL
BASE_URL=\$(echo \$REDIRECT_URL | grep -o -P '(?=https).*(?=\?)')
# grab the filename of the ISO
FILENAME=\$(echo "\${BASE_URL##*/}")

echo "Downloading..."
echo \$REDIRECT_URL
echo "... to ..."
#echo \$FILENAME

# download the ISO
wget -q --show-progress -O \$FILENAME "\$REDIRECT_URL"
EOF

chmod 600 /images/dl_edge_iso.sh
chmod +x /images/dl_edge_iso.sh

#check web console url for certificate
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090

#also go ahead and echo it to a text file as well just for good measure
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090 >> ~/webconsoleurl.txt

# Enable EPEL for RHEL 9
subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

#install necessary components
dnf install -y certbot python3-certbot-nginx

#ensure certbot is successfully installed
certbot --version

#stop the process that is using TCP port 80; we need that port open for certbot
fuser -k 80/tcp

#request our certificate
certbot certonly --standalone --preferred-challenges http -d ${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io --non-interactive --agree-tos -m trackbot@instruqt.com -v

#configure our certificate for the web console (copy it into the cockpit certificate folder)
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/cert.pem >> /etc/cockpit/ws-certs.d/certificate.cert
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/privkey.pem >> /etc/cockpit/ws-certs.d/certificate.cert

#remove the old self-signed certificates
rm /etc/cockpit/ws-certs.d/0*

#restart cockpit to apply the changs
systemctl restart cockpit