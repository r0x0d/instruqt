#!/bin/bash
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
   echo "Waiting for Instruqt to finish booting the VM"
   sleep 1
done

subscription-manager register --activationkey=${ACTIVATION_KEY} --org=12451665 --force

echo "Adding wheel" > /root/post-run.log
usermod -aG wheel rhel

echo "setting password" >> /root/post-run.log
echo redhat | passwd --stdin rhel

echo "DONE" >> /root/post-run.log

# Downgrade openssh so that the lab will have something to upgrade.

dnf downgrade openssh -y

# set up SSL for certificate signing

#check web console url for certificate
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090

#also go ahead and echo it to a text file as well just for good measure
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090 >> ~/webconsoleurl.txt

# Enable EPEL for RHEL 9
subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

#install necessary components
dnf install -y certbot python3-certbot-nginx

#ensure certbot is successfully installed
certbot --version

#stop the process that is using TCP port 80; we need that port open for certbot
fuser -k 80/tcp

#request our certificate
certbot certonly --standalone --preferred-challenges http -d ${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io --non-interactive --agree-tos -m trackbot@instruqt.com -v

#configure our certificate for the web console (copy it into the cockpit certificate folder)
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/cert.pem >> /etc/cockpit/ws-certs.d/certificate.cert
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/privkey.pem >> /etc/cockpit/ws-certs.d/certificate.cert

#remove the old self-signed certificates
rm /etc/cockpit/ws-certs.d/0*

#restart cockpit to apply the changs
systemctl restart cockpit